name: Main

on:
  push:
    branches: [ main ]
  pull_request: { }

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Dart format check
        run: dart format --set-exit-if-changed --output=none lib test bin

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Get dependencies
        run: dart pub get
      - name: Code generation
        run: dart run build_runner build
      - name: Dart analyze
        run: dart analyze --fatal-infos

  build-app-image:
    needs:
      - check-format
      - lint
    uses: BlindfoldedSurgery/actions-container/.github/workflows/build-image-docker.yml@v3
    with:
      platform: 'linux/arm64'
      push-image: ${{ github.ref_name == github.event.repository.default_branch }}
      image-name: "mixology-api/app"

  build-migrations-image:
    needs:
      - check-format
      - lint
    uses: BlindfoldedSurgery/actions-container/.github/workflows/build-image-docker.yml@v3
    with:
      context: "{{defaultContext}}:migrations"
      platform: 'linux/arm64'
      push-image: ${{ github.ref_name == github.event.repository.default_branch }}
      image-name: "mixology-api/migrations"

  deploy:
    container: ghcr.io/bjoernpetersen/helm:2.1.0
    runs-on: born-self-mixology-api
    needs: [ build-app-image, build-migrations-image ]
    if: github.ref_name == github.event.repository.default_branch
    concurrency: production
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: actions/checkout@v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          APP_IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/app"
          MIGRATIONS_IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/migrations"
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          JWT_ACCESS: ${{ secrets.JWT_ACCESS }}
          JWT_OAUTH: ${{ secrets.JWT_OAUTH }}
          JWT_REFRESH: ${{ secrets.JWT_REFRESH }}
      - name: Store Kubeconfig
        run: mkdir ~/.kube && printenv "KUBECONFIG" > ~/.kube/config && chmod 400 ~/.kube/config
        env:
          KUBECONFIG: ${{ secrets.BORN_KUBECONFIG_RAW }}
      - name: Upgrade helm installation
        run: helm upgrade api . --install --namespace=mixology --atomic

  clean:
    concurrency: cleanup
    needs: [ deploy ]
    uses: BlindfoldedSurgery/actions-container/.github/workflows/clean.yml@v3
    strategy:
      matrix:
        image-part: [ app, migrations ]
    with:
      image-name: mixology-api/${{ matrix.image-part }}
