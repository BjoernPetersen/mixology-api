---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
        - name: migrations
          image: {{ .Values.image.migrations }}:{{ .Values.appVersion }}
          args:
            - migrate
            - -skipCheckForUpdate
          envFrom:
            - configMapRef:
                name: db-config
          env:
            - name: FLYWAY_URL
              value: jdbc:postgresql://$(DB_HOST):5432/$(DB_NAME)
            - name: FLYWAY_USER
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DB_USER
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.user }}.{{ .Values.postgres.host }}.credentials.postgresql.acid.zalan.do
                  key: password
      containers:
        - name: app
          image: {{ .Values.image.app }}:{{ .Values.appVersion }}
          args: [ run-api ]
          resources:
            requests:
              cpu: 10m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          startupProbe:
            initialDelaySeconds: 10
            httpGet:
              port: http
              path: /health/live
          livenessProbe:
            httpGet:
              port: http
              path: /health/live
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.user }}.{{ .Values.postgres.host }}.credentials.postgresql.acid.zalan.do
                  key: password
          envFrom:
            - configMapRef:
                name: db-config
            - configMapRef:
                name: spotify-config
            - secretRef:
                name: api-secrets
